{"ast":null,"code":"import _objectSpread from\"/var/www/html/node/react-games/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useEffect,useState}from\"react\";import ConfettiExplosion from\"react-confetti-explosion\";import\"./App.scss\";import\"./Button.scss\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const noRows=3;const modes=[{label:\"Easy\",value:0},{label:\"Hard\",value:1},{label:\"Play With Friend\",value:2}];const initialData=[...Array(noRows).keys()].map(()=>[...Array(noRows).fill(null)]);const[tern,setTern]=useState(0);// 0-user, 1-computer\nconst[boardData,setBoardData]=useState(initialData);// 0-O, 1-X\nconst[gameOver,setGameOver]=useState(false);const[winner,setWinner]=useState(null);const[mode,setMode]=useState(0);useEffect(()=>{const winner=checkWinner(boardData);if(winner!==null){setWinner(winner);setGameOver(true);}else if(mode!=2&&tern===1){computerMove();}},[boardData,tern]);useEffect(()=>{setTern(0);setBoardData(initialData);},[mode]);const handleClick=(x,y)=>{if((mode!=2&&tern===0||mode==2)&&!gameOver){const newBoard=[...boardData];if(newBoard[x][y]===null){newBoard[x][y]=tern;setBoardData(newBoard);setTern(tern?0:1);}}};const shuffle=array=>{return array.sort(()=>Math.random()-0.5);};const computerMove=()=>{const board=structuredClone(boardData);if(mode==1){// Try to win\nlet player=tern;for(let x in boardData){for(let y in boardData[x]){const boardCopy=structuredClone(board);if(boardCopy[x][y]===null){boardCopy[x][y]=player;if(checkWinner(boardCopy)===player){makeMove(x,y);return;}}}}// Block player win\nplayer=tern?0:1;for(let x in boardData){for(let y in boardData[x]){const boardCopy=structuredClone(board);if(boardCopy[x][y]===null){boardCopy[x][y]=player;if(checkWinner(boardCopy)===player){makeMove(x,y);return;}}}}}// Take center\nlet center=Math.floor(noRows/2);if(board[center][center]===null){makeMove(center,center);return;}// Take a corner\nlet corners=[[0,0],[0,noRows-1],[noRows-1,0],[noRows-1,noRows-1]];for(let[x,y]of shuffle(corners)){if(board[x][y]===null){makeMove(x,y);return;}}// Take sides\nfor(let x in board){for(let y in board[x]){if(board[x][y]===null){makeMove(x,y);return;}}}};const makeMove=(x,y)=>{const newBoard=[...boardData];if(newBoard[x][y]===null){setTimeout(()=>{newBoard[x][y]=tern;setBoardData(newBoard);setTern(tern?0:1);},300);}};const checkWinner=board=>{let tempDatas={};let datas={};for(let x in board){for(let y in board[x]){let player=board[x][y]===0?0:board[x][y]===1?1:null;if(player!==null){if(!datas[player])datas[player]=[];datas[player].push([x,y]);if(!tempDatas[player]){tempDatas[player]={x:{},y:{}};}tempDatas[player][\"x\"][x]=tempDatas[player][\"x\"][x]?tempDatas[player][\"x\"][x]+1:1;tempDatas[player][\"y\"][y]=tempDatas[player][\"y\"][y]?tempDatas[player][\"y\"][y]+1:1;if(tempDatas[player][\"x\"][x]===noRows||tempDatas[player][\"y\"][y]===noRows){return player;}else{let diagonalX=Object.values(tempDatas[player][\"x\"]).length;let diagonalY=Object.values(tempDatas[player][\"y\"]).length;if(diagonalX===noRows&&diagonalY===noRows){if(datas[player].reduce((t,v)=>v[0]==t&&v[1]==t?t+1:t,0)>=noRows){return player;}else if(datas[player].reduce((t,v)=>v[0]==noRows-t&&v[1]==t-1?t-1:t,noRows)===0){return player;}}}}}}if(board.every(row=>row.every(col=>col!==null)))return 2;return null;};const restart=()=>{setWinner(null);setGameOver(false);setBoardData(initialData);setTern(0);};const confettiProps={force:0.6,duration:3000,particleCount:180,floorheight:1600,floorwidth:1600};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Tic Tac Toe\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"select\",{value:mode,onChange:e=>setMode(e.target.value),children:modes.map((item,key)=>/*#__PURE__*/_jsx(\"option\",{value:item.value,children:item.label},key))})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"table\",{className:\"board\",children:/*#__PURE__*/_jsx(\"tbody\",{children:boardData.map((row,x)=>/*#__PURE__*/_jsx(\"tr\",{children:row.map((col,y)=>/*#__PURE__*/_jsx(\"td\",{onClick:()=>handleClick(x,y),children:/*#__PURE__*/_jsx(\"p\",{children:col===0?\"O\":col===1?\"X\":\"\"})},y))},x))})})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>!gameOver&&setBoardData(initialData),children:\"reset\"})})]}),gameOver&&/*#__PURE__*/_jsxs(_Fragment,{children:[winner!==2&&(mode==2||mode!=2&&winner==0)&&/*#__PURE__*/_jsx(\"div\",{className:\"confetti-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"confetti-source\",children:/*#__PURE__*/_jsx(ConfettiExplosion,_objectSpread({},confettiProps))})}),/*#__PURE__*/_jsx(\"div\",{className:\"winner-container\",children:/*#__PURE__*/_jsxs(\"div\",{children:[winner!==null&&/*#__PURE__*/_jsx(\"p\",{children:winner===2?\"Match Draw\":\"\".concat(winner?\"X\":\"O\",\" is winner!\")}),/*#__PURE__*/_jsx(\"button\",{className:\"super-button\",onClick:restart,children:\"Play Again\"})]})})]})]});}export default App;","map":{"version":3,"names":["useEffect","useState","ConfettiExplosion","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","noRows","modes","label","value","initialData","Array","keys","map","fill","tern","setTern","boardData","setBoardData","gameOver","setGameOver","winner","setWinner","mode","setMode","checkWinner","computerMove","handleClick","x","y","newBoard","shuffle","array","sort","Math","random","board","structuredClone","player","boardCopy","makeMove","center","floor","corners","setTimeout","tempDatas","datas","push","diagonalX","Object","values","length","diagonalY","reduce","t","v","every","row","col","restart","confettiProps","force","duration","particleCount","floorheight","floorwidth","children","className","onChange","e","target","item","key","onClick","_objectSpread","concat"],"sources":["/var/www/html/node/react-games/tic-tac-toe/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport ConfettiExplosion from \"react-confetti-explosion\";\nimport \"./App.scss\";\nimport \"./Button.scss\";\n\nfunction App() {\n  const noRows = 3;\n  const modes = [\n    {\n      label: \"Easy\",\n      value: 0,\n    },\n    {\n      label: \"Hard\",\n      value: 1,\n    },\n    {\n      label: \"Play With Friend\",\n      value: 2,\n    },\n  ];\n  const initialData = [...Array(noRows).keys()].map(() => [...Array(noRows).fill(null)]);\n  const [tern, setTern] = useState(0); // 0-user, 1-computer\n  const [boardData, setBoardData] = useState(initialData); // 0-O, 1-X\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [mode, setMode] = useState(0);\n\n  useEffect(() => {\n    const winner = checkWinner(boardData);\n    if (winner !== null) {\n      setWinner(winner);\n      setGameOver(true);\n    } else if (mode != 2 && tern === 1) {\n      computerMove();\n    }\n  }, [boardData, tern]);\n\n  useEffect(() => {\n    setTern(0);\n    setBoardData(initialData);\n  }, [mode]);\n\n  const handleClick = (x, y) => {\n    if (((mode != 2 && tern === 0) || mode == 2) && !gameOver) {\n      const newBoard = [...boardData];\n      if (newBoard[x][y] === null) {\n        newBoard[x][y] = tern;\n        setBoardData(newBoard);\n        setTern(tern ? 0 : 1);\n      }\n    }\n  };\n\n  const shuffle = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  const computerMove = () => {\n    const board = structuredClone(boardData);\n\n    if (mode == 1) {\n      // Try to win\n      let player = tern;\n      for (let x in boardData) {\n        for (let y in boardData[x]) {\n          const boardCopy = structuredClone(board);\n          if (boardCopy[x][y] === null) {\n            boardCopy[x][y] = player;\n\n            if (checkWinner(boardCopy) === player) {\n              makeMove(x, y);\n              return;\n            }\n          }\n        }\n      }\n\n      // Block player win\n      player = tern ? 0 : 1;\n      for (let x in boardData) {\n        for (let y in boardData[x]) {\n          const boardCopy = structuredClone(board);\n\n          if (boardCopy[x][y] === null) {\n            boardCopy[x][y] = player;\n\n            if (checkWinner(boardCopy) === player) {\n              makeMove(x, y);\n              return;\n            }\n          }\n        }\n      }\n    }\n\n    // Take center\n    let center = Math.floor(noRows / 2);\n    if (board[center][center] === null) {\n      makeMove(center, center);\n      return;\n    }\n\n    // Take a corner\n    let corners = [\n      [0, 0],\n      [0, noRows - 1],\n      [noRows - 1, 0],\n      [noRows - 1, noRows - 1],\n    ];\n    for (let [x, y] of shuffle(corners)) {\n      if (board[x][y] === null) {\n        makeMove(x, y);\n        return;\n      }\n    }\n\n    // Take sides\n    for (let x in board) {\n      for (let y in board[x]) {\n        if (board[x][y] === null) {\n          makeMove(x, y);\n          return;\n        }\n      }\n    }\n  };\n\n  const makeMove = (x, y) => {\n    const newBoard = [...boardData];\n    if (newBoard[x][y] === null) {\n      setTimeout(() => {\n        newBoard[x][y] = tern;\n        setBoardData(newBoard);\n        setTern(tern ? 0 : 1);\n      }, 300);\n    }\n  };\n\n  const checkWinner = (board) => {\n    let tempDatas = {};\n    let datas = {};\n\n    for (let x in board) {\n      for (let y in board[x]) {\n        let player = board[x][y] === 0 ? 0 : board[x][y] === 1 ? 1 : null;\n\n        if (player !== null) {\n          if (!datas[player]) datas[player] = [];\n          datas[player].push([x, y]);\n\n          if (!tempDatas[player]) {\n            tempDatas[player] = { x: {}, y: {} };\n          }\n          tempDatas[player][\"x\"][x] = tempDatas[player][\"x\"][x] ? tempDatas[player][\"x\"][x] + 1 : 1;\n          tempDatas[player][\"y\"][y] = tempDatas[player][\"y\"][y] ? tempDatas[player][\"y\"][y] + 1 : 1;\n\n          if (tempDatas[player][\"x\"][x] === noRows || tempDatas[player][\"y\"][y] === noRows) {\n            return player;\n          } else {\n            let diagonalX = Object.values(tempDatas[player][\"x\"]).length;\n            let diagonalY = Object.values(tempDatas[player][\"y\"]).length;\n\n            if (diagonalX === noRows && diagonalY === noRows) {\n              if (\n                datas[player].reduce((t, v) => (v[0] == t && v[1] == t ? t + 1 : t), 0) >= noRows\n              ) {\n                return player;\n              } else if (\n                datas[player].reduce(\n                  (t, v) => (v[0] == noRows - t && v[1] == t - 1 ? t - 1 : t),\n                  noRows\n                ) === 0\n              ) {\n                return player;\n              }\n            }\n          }\n        }\n      }\n    }\n    if (board.every((row) => row.every((col) => col !== null))) return 2;\n    return null;\n  };\n\n  const restart = () => {\n    setWinner(null);\n    setGameOver(false);\n    setBoardData(initialData);\n    setTern(0);\n  };\n\n  const confettiProps = {\n    force: 0.6,\n    duration: 3000,\n    particleCount: 180,\n    floorheight: 1600,\n    floorwidth: 1600,\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"title\">Tic Tac Toe</h1>\n        <div>\n          <select value={mode} onChange={(e) => setMode(e.target.value)}>\n            {modes.map((item, key) => (\n              <option value={item.value} key={key}>\n                {item.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <table className=\"board\">\n            <tbody>\n              {boardData.map((row, x) => (\n                <tr key={x}>\n                  {row.map((col, y) => (\n                    <td key={y} onClick={() => handleClick(x, y)}>\n                      <p>{col === 0 ? \"O\" : col === 1 ? \"X\" : \"\"}</p>\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div>\n          <button onClick={() => !gameOver && setBoardData(initialData)}>reset</button>\n        </div>\n      </div>\n      {gameOver && (\n        <>\n          {winner !== 2 && (mode == 2 || (mode != 2 && winner == 0)) && (\n            <div className=\"confetti-container\">\n              <div className=\"confetti-source\">\n                <ConfettiExplosion {...confettiProps} />\n              </div>\n            </div>\n          )}\n          <div className=\"winner-container\">\n            <div>\n              {winner !== null && (\n                <p>{winner === 2 ? \"Match Draw\" : `${winner ? \"X\" : \"O\"} is winner!`}</p>\n              )}\n              <button className=\"super-button\" onClick={restart}>\n                Play Again\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}