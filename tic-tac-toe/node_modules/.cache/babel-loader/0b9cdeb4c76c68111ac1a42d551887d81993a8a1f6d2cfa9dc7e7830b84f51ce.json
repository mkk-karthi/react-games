{"ast":null,"code":"var _jsxFileName = \"/var/www/html/node/react-games/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const noRows = 3;\n  const initialData = [...Array(noRows).keys()].map(() => [...Array(noRows).fill(null)]);\n  const [tern, setTern] = useState(0);\n  const [boardDatas, setData] = useState(initialData);\n\n  // Try to win\n  const changeData = (x, y) => {\n    if (boardDatas[x][y] === null) {\n      boardDatas[x][y] = tern;\n      setData(boardDatas);\n      // setTern(tern === 0 ? 1 : 0);\n\n      setTimeout(() => {\n        computerMove();\n      }, 300);\n    }\n  };\n  const computerMove = () => {\n    const board = structuredClone(boardDatas);\n    for (let x in board) {\n      for (let y in board[x]) {\n        const boardCopy = structuredClone(board);\n        let player = tern ? 0 : 1;\n        if (boardCopy[x][y] === null) {\n          boardCopy[x][y] = player;\n          if (checkWin(boardCopy) === player) {\n            makeMove(x, y);\n            return;\n          }\n        }\n      }\n    }\n\n    // Block player win\n    for (let x in board) {\n      for (let y in board[x]) {\n        const boardCopy = structuredClone(board);\n        let player = tern;\n        if (boardCopy[x][y] === null) {\n          boardCopy[x][y] = player;\n          if (checkWin(boardCopy) === player) {\n            makeMove(x, y);\n            return;\n          }\n        }\n      }\n    }\n\n    // Take center\n    let center = Math.floor(noRows / 2);\n    console.log(\"center\", center, board, boardDatas);\n    if (board[center][center] === null) {\n      console.log(\"center\", center);\n      makeMove(center, center);\n      return;\n    }\n\n    // Take a corner\n    let corners = [[0, 0], [0, noRows - 1], [noRows - 1, 0], [noRows - 1, noRows - 1]];\n    for (let [x, y] of corners) {\n      if (board[x][y] === null) {\n        makeMove(x, y);\n        return;\n      }\n    }\n    for (let x in board) {\n      for (let y in board[x]) {\n        if (board[x][y] === null) {\n          makeMove(x, y);\n          return;\n        }\n      }\n    }\n  };\n  const makeMove = (x, y) => {\n    console.log(\"boardDatas\", boardDatas);\n    if (boardDatas[x][y] === null) {\n      boardDatas[x][y] = tern ? 0 : 1;\n      setData(boardDatas);\n    }\n  };\n  const checkWin = board => {\n    if (board.every(cell => cell >= 0)) return \"Draw\";\n    let tempDatas = {};\n    for (let x in board) {\n      for (let y in board[x]) {\n        let player = board[x][y] === 0 ? \"O\" : board[x][y] === 1 ? \"X\" : null;\n        if (player) {\n          if (!tempDatas[player]) {\n            tempDatas[player] = {\n              x: {},\n              y: {}\n            };\n          }\n          tempDatas[player][\"x\"][x] = tempDatas[player][\"x\"][x] ? tempDatas[player][\"x\"][x] + 1 : 1;\n          tempDatas[player][\"y\"][y] = tempDatas[player][\"y\"][y] ? tempDatas[player][\"y\"][y] + 1 : 1;\n          if (tempDatas[player][\"x\"][x] == noRows || tempDatas[player][\"y\"][y] == noRows) {\n            return player;\n            // } else if(tempDatas[player][\"x\"][x] == noRows - 1 || tempDatas[player][\"y\"][y] == noRows - 1) {\n            //     console.log(player, \"hintx\", x, getHint(tempDatas[player][\"y\"]));\n            //     console.log(player, \"hinty\", getHint(tempDatas[player][\"x\"]), y, tempDatas[player][\"x\"],tempDatas[player][\"y\"]);\n          } else {\n            let diagonalX = Object.keys(tempDatas[player][\"x\"]).length;\n            let diagonalY = Object.keys(tempDatas[player][\"y\"]).length;\n            if (diagonalX == noRows && diagonalY == noRows) {\n              return player;\n              // } else if (diagonalX == noRows - 1 && diagonalY == noRows - 1) {\n              //   console.log(player, \"available win\");\n            }\n          }\n        }\n        // if (player) {\n        //   if (!tempDatas[player]) tempDatas[player] = [];\n        //   tempDatas[player].push([x, y]);\n        // }\n\n        // if (board[x][y] === 0) {\n        //   tempDatas.push([x, y]);\n        // } else if (board[x][y] === 1) {\n        //   YDatas.push([x, y]);\n        // }\n      }\n    }\n    // console.log(tempDatas);\n    // for (let [player, playerData] of Object.entries(tempDatas)) {\n    //   for (let axis in playerData) {\n    //     axis.reduce((v, t) => v[0] == t, false);\n    //     if (axis > 0) {\n    //       if (player[axis][0] == player[axis - 1][0]) {\n    //       } else if (player[axis][0] == player[axis - 1][0]) {\n    //       }\n    //     }\n    //   }\n    // }\n    // for (let [player, playerData] of Object.entries(tempDatas)) {\n    //   for (let [axis, axisData] of Object.entries(playerData)) {\n    //     for (let key in axisData) {\n    //       if (axisData[key] == 3) {\n    //         console.log(player, \"win\");\n    //       } else if (axisData[key] == 2) {\n    //         console.log(player, \"available win\");\n    //       }\n    //     }\n    //   }\n    // }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: boardDatas.map((row, x) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((col, y) => /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => changeData(x, y),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: col === 0 ? \"O\" : col === 1 ? \"X\" : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, y, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this))\n            }, x, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setData(initialData),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setTern(tern === 0 ? 1 : 0),\n          children: tern\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"IE3RhFbfq+qeGp5vpJ1CY9X8844=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","noRows","initialData","Array","keys","map","fill","tern","setTern","boardDatas","setData","changeData","x","y","setTimeout","computerMove","board","structuredClone","boardCopy","player","checkWin","makeMove","center","Math","floor","console","log","corners","every","cell","tempDatas","diagonalX","Object","length","diagonalY","children","className","fileName","_jsxFileName","lineNumber","columnNumber","row","col","onClick","_c","$RefreshReg$"],"sources":["/var/www/html/node/react-games/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.scss\";\n\nfunction App() {\n  const noRows = 3;\n  const initialData = [...Array(noRows).keys()].map(() => [\n    ...Array(noRows).fill(null),\n  ]);\n  const [tern, setTern] = useState(0);\n  const [boardDatas, setData] = useState(initialData);\n\n  // Try to win\n  const changeData = (x, y) => {\n    if (boardDatas[x][y] === null) {\n      boardDatas[x][y] = tern;\n      setData(boardDatas);\n      // setTern(tern === 0 ? 1 : 0);\n\n      setTimeout(() => {\n        computerMove();\n      }, 300);\n    }\n  };\n\n  const computerMove = () => {\n    const board = structuredClone(boardDatas);\n    for (let x in board) {\n      for (let y in board[x]) {\n        const boardCopy = structuredClone(board);\n        let player = tern ? 0 : 1;\n        if (boardCopy[x][y] === null) {\n          boardCopy[x][y] = player;\n\n          if (checkWin(boardCopy) === player) {\n            makeMove(x, y);\n            return;\n          }\n        }\n      }\n    }\n\n    // Block player win\n    for (let x in board) {\n      for (let y in board[x]) {\n        const boardCopy = structuredClone(board);\n        let player = tern;\n        if (boardCopy[x][y] === null) {\n          boardCopy[x][y] = player;\n\n          if (checkWin(boardCopy) === player) {\n            makeMove(x, y);\n            return;\n          }\n        }\n      }\n    }\n\n    // Take center\n    let center = Math.floor(noRows / 2);\n    console.log(\"center\", center, board, boardDatas);\n    if (board[center][center] === null) {\n      console.log(\"center\", center);\n      makeMove(center, center);\n      return;\n    }\n\n    // Take a corner\n    let corners = [\n      [0, 0],\n      [0, noRows - 1],\n      [noRows - 1, 0],\n      [noRows - 1, noRows - 1],\n    ];\n    for (let [x, y] of corners) {\n      if (board[x][y] === null) {\n        makeMove(x, y);\n        return;\n      }\n    }\n\n    for (let x in board) {\n      for (let y in board[x]) {\n        if (board[x][y] === null) {\n          makeMove(x, y);\n          return;\n        }\n      }\n    }\n  };\n\n  const makeMove = (x, y) => {\n    console.log(\"boardDatas\", boardDatas);\n    if (boardDatas[x][y] === null) {\n      boardDatas[x][y] = tern ? 0 : 1;\n      setData(boardDatas);\n    }\n  };\n\n  const checkWin = (board) => {\n    if (board.every((cell) => cell >= 0)) return \"Draw\";\n    let tempDatas = {};\n    for (let x in board) {\n      for (let y in board[x]) {\n        let player = board[x][y] === 0 ? \"O\" : board[x][y] === 1 ? \"X\" : null;\n        if (player) {\n          if (!tempDatas[player]) {\n            tempDatas[player] = { x: {}, y: {} };\n          }\n          tempDatas[player][\"x\"][x] = tempDatas[player][\"x\"][x]\n            ? tempDatas[player][\"x\"][x] + 1\n            : 1;\n          tempDatas[player][\"y\"][y] = tempDatas[player][\"y\"][y]\n            ? tempDatas[player][\"y\"][y] + 1\n            : 1;\n\n          if (\n            tempDatas[player][\"x\"][x] == noRows ||\n            tempDatas[player][\"y\"][y] == noRows\n          ) {\n            return player;\n            // } else if(tempDatas[player][\"x\"][x] == noRows - 1 || tempDatas[player][\"y\"][y] == noRows - 1) {\n            //     console.log(player, \"hintx\", x, getHint(tempDatas[player][\"y\"]));\n            //     console.log(player, \"hinty\", getHint(tempDatas[player][\"x\"]), y, tempDatas[player][\"x\"],tempDatas[player][\"y\"]);\n          } else {\n            let diagonalX = Object.keys(tempDatas[player][\"x\"]).length;\n            let diagonalY = Object.keys(tempDatas[player][\"y\"]).length;\n            if (diagonalX == noRows && diagonalY == noRows) {\n              return player;\n              // } else if (diagonalX == noRows - 1 && diagonalY == noRows - 1) {\n              //   console.log(player, \"available win\");\n            }\n          }\n        }\n        // if (player) {\n        //   if (!tempDatas[player]) tempDatas[player] = [];\n        //   tempDatas[player].push([x, y]);\n        // }\n\n        // if (board[x][y] === 0) {\n        //   tempDatas.push([x, y]);\n        // } else if (board[x][y] === 1) {\n        //   YDatas.push([x, y]);\n        // }\n      }\n    }\n    // console.log(tempDatas);\n    // for (let [player, playerData] of Object.entries(tempDatas)) {\n    //   for (let axis in playerData) {\n    //     axis.reduce((v, t) => v[0] == t, false);\n    //     if (axis > 0) {\n    //       if (player[axis][0] == player[axis - 1][0]) {\n    //       } else if (player[axis][0] == player[axis - 1][0]) {\n    //       }\n    //     }\n    //   }\n    // }\n    // for (let [player, playerData] of Object.entries(tempDatas)) {\n    //   for (let [axis, axisData] of Object.entries(playerData)) {\n    //     for (let key in axisData) {\n    //       if (axisData[key] == 3) {\n    //         console.log(player, \"win\");\n    //       } else if (axisData[key] == 2) {\n    //         console.log(player, \"available win\");\n    //       }\n    //     }\n    //   }\n    // }\n    return null;\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Tic Tac Toe</h1>\n        <div>\n          <table>\n            <tbody>\n              {boardDatas.map((row, x) => (\n                <tr key={x}>\n                  {row.map((col, y) => (\n                    <td key={y} onClick={() => changeData(x, y)}>\n                      <p>{col === 0 ? \"O\" : col === 1 ? \"X\" : \"\"}</p>\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div>\n          <button onClick={() => setData(initialData)}>reset</button>\n          <p onClick={() => setTern(tern === 0 ? 1 : 0)}>{tern}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}