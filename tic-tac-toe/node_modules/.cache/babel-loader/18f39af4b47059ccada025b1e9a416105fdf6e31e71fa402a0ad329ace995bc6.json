{"ast":null,"code":"var _jsxFileName = \"/var/www/html/node/react-games/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(squares);\n  useEffect(() => {\n    if (!xIsNext && !winner && !squares.every(Boolean)) {\n      // Computer's turn\n      const timer = setTimeout(() => {\n        makeComputerMove();\n      }, 500); // Delay for a more natural feel\n      return () => clearTimeout(timer);\n    }\n  }, [xIsNext, squares, winner]);\n  const handleClick = i => {\n    if (squares[i] || winner) {\n      return; // Square already filled or game won\n    }\n    const newSquares = squares.slice();\n    newSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n  };\n  const makeComputerMove = () => {\n    const emptySquares = squares.map((sq, index) => sq === null ? index : null).filter(val => val !== null);\n    if (emptySquares.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptySquares.length);\n      const computerMoveIndex = emptySquares[randomIndex];\n      const newSquares = squares.slice();\n      newSquares[computerMoveIndex] = 'O';\n      setSquares(newSquares);\n      setXIsNext(true); // Switch back to player's turn\n    }\n  };\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => handleClick(i),\n      children: squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n  const resetGame = () => {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  };\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else if (squares.every(Boolean)) {\n    status = 'Draw!';\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"VJwVXZuG8bW+YoGzXaA02QCN2JA=\");\n_c = TicTacToe;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TicTacToe","_s","squares","setSquares","Array","fill","xIsNext","setXIsNext","winner","calculateWinner","every","Boolean","timer","setTimeout","makeComputerMove","clearTimeout","handleClick","i","newSquares","slice","emptySquares","map","sq","index","filter","val","length","randomIndex","Math","floor","random","computerMoveIndex","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","resetGame","status","_c","lines","a","b","c","$RefreshReg$"],"sources":["/var/www/html/node/react-games/tic-tac-toe/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction TicTacToe() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(squares);\n\n  useEffect(() => {\n    if (!xIsNext && !winner && !squares.every(Boolean)) { // Computer's turn\n      const timer = setTimeout(() => {\n        makeComputerMove();\n      }, 500); // Delay for a more natural feel\n      return () => clearTimeout(timer);\n    }\n  }, [xIsNext, squares, winner]);\n\n  const handleClick = (i) => {\n    if (squares[i] || winner) {\n      return; // Square already filled or game won\n    }\n    const newSquares = squares.slice();\n    newSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n  };\n\n  const makeComputerMove = () => {\n    const emptySquares = squares.map((sq, index) => (sq === null ? index : null)).filter(val => val !== null);\n    if (emptySquares.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptySquares.length);\n      const computerMoveIndex = emptySquares[randomIndex];\n      const newSquares = squares.slice();\n      newSquares[computerMoveIndex] = 'O';\n      setSquares(newSquares);\n      setXIsNext(true); // Switch back to player's turn\n    }\n  };\n\n  const renderSquare = (i) => {\n    return (\n      <button className=\"square\" onClick={() => handleClick(i)}>\n        {squares[i]}\n      </button>\n    );\n  };\n\n  const resetGame = () => {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  };\n\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else if (squares.every(Boolean)) {\n    status = 'Draw!';\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <button onClick={resetGame}>Reset Game</button>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default TicTacToe;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}