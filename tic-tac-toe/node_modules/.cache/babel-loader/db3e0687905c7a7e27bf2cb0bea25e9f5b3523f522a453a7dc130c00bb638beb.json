{"ast":null,"code":"var _jsxFileName = \"/var/www/html/node/react-games/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  value,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: onClick,\n  style: {\n    width: '60px',\n    height: '60px',\n    fontSize: '24px',\n    margin: '4px'\n  },\n  children: value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Square;\nconst Board = ({\n  squares,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: squares.slice(0, 3).map((val, idx) => /*#__PURE__*/_jsxDEV(Square, {\n      value: val,\n      onClick: () => onClick(idx)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: squares.slice(3, 6).map((val, idx) => /*#__PURE__*/_jsxDEV(Square, {\n      value: val,\n      onClick: () => onClick(idx + 3)\n    }, idx + 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: squares.slice(6, 9).map((val, idx) => /*#__PURE__*/_jsxDEV(Square, {\n      value: val,\n      onClick: () => onClick(idx + 6)\n    }, idx + 6, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n_c2 = Board;\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const checkWinner = board => {\n    for (let [a, b, c] of lines) {\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    if (board.every(cell => cell)) return 'Draw';\n    return null;\n  };\n  const handleClick = index => {\n    if (board[index] || gameOver || !isXTurn) return;\n    const newBoard = [...board];\n    newBoard[index] = 'X';\n    setBoard(newBoard);\n    setIsXTurn(false);\n  };\n\n  // Minimax AI for unbeatable computer\n  const minimax = (newBoard, isMaximizing) => {\n    const result = checkWinner(newBoard);\n    if (result === 'O') return {\n      score: 1\n    };\n    if (result === 'X') return {\n      score: -1\n    };\n    if (result === 'Draw') return {\n      score: 0\n    };\n    const scores = [];\n    newBoard.forEach((cell, idx) => {\n      if (cell === null) {\n        const boardCopy = [...newBoard];\n        boardCopy[idx] = isMaximizing ? 'O' : 'X';\n        const result = minimax(boardCopy, !isMaximizing);\n        scores.push({\n          score: result.score,\n          index: idx\n        });\n      }\n    });\n    console.log(\"scores\", scores);\n    if (isMaximizing) {\n      return scores.reduce((best, move) => move.score > best.score ? move : best);\n    } else {\n      return scores.reduce((best, move) => move.score < best.score ? move : best);\n    }\n  };\n  const makeComputerMove = () => {\n    const bestMove = minimax(board, true);\n    if (bestMove.index !== undefined) {\n      const newBoard = [...board];\n      newBoard[bestMove.index] = 'O';\n      setTimeout(() => {\n        setBoard(newBoard);\n        setIsXTurn(true);\n      }, 300);\n    }\n  };\n  useEffect(() => {\n    const result = checkWinner(board);\n    if (result) {\n      setWinner(result);\n      setGameOver(true);\n    } else if (!isXTurn) {\n      makeComputerMove();\n    }\n  }, [board, isXTurn]);\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXTurn(true);\n    setGameOver(false);\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe - Hard Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: winner === 'Draw' ? 'It\\'s a draw!' : `Winner: ${winner}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Y2t0W6pJeqD7CcYQSm2bQSxc8CI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Square","value","onClick","style","width","height","fontSize","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","squares","slice","map","val","idx","_c2","App","_s","board","setBoard","Array","fill","isXTurn","setIsXTurn","gameOver","setGameOver","winner","setWinner","lines","checkWinner","a","b","c","every","cell","handleClick","index","newBoard","minimax","isMaximizing","result","score","scores","forEach","boardCopy","push","console","log","reduce","best","move","makeComputerMove","bestMove","undefined","setTimeout","resetGame","textAlign","_c3","$RefreshReg$"],"sources":["/var/www/html/node/react-games/tic-tac-toe/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Square = ({ value, onClick }) => (\n  <button \n    onClick={onClick} \n    style={{\n      width: '60px',\n      height: '60px',\n      fontSize: '24px',\n      margin: '4px',\n    }}\n  >\n    {value}\n  </button>\n);\n\nconst Board = ({ squares, onClick }) => (\n  <div>\n    <div>\n      {squares.slice(0, 3).map((val, idx) => (\n        <Square key={idx} value={val} onClick={() => onClick(idx)} />\n      ))}\n    </div>\n    <div>\n      {squares.slice(3, 6).map((val, idx) => (\n        <Square key={idx + 3} value={val} onClick={() => onClick(idx + 3)} />\n      ))}\n    </div>\n    <div>\n      {squares.slice(6, 9).map((val, idx) => (\n        <Square key={idx + 6} value={val} onClick={() => onClick(idx + 6)} />\n      ))}\n    </div>\n  </div>\n);\n\n\nconst App = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  const lines = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    [0, 4, 8], [2, 4, 6],\n  ];\n\n  const checkWinner = (board) => {\n    for (let [a, b, c] of lines) {\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    if (board.every(cell => cell)) return 'Draw';\n    return null;\n  };\n\n  const handleClick = (index) => {\n    if (board[index] || gameOver || !isXTurn) return;\n    const newBoard = [...board];\n    newBoard[index] = 'X';\n    setBoard(newBoard);\n    setIsXTurn(false);\n  };\n\n  // Minimax AI for unbeatable computer\n  const minimax = (newBoard, isMaximizing) => {\n    const result = checkWinner(newBoard);\n    if (result === 'O') return { score: 1 };\n    if (result === 'X') return { score: -1 };\n    if (result === 'Draw') return { score: 0 };\n\n    const scores = [];\n\n    newBoard.forEach((cell, idx) => {\n      if (cell === null) {\n        const boardCopy = [...newBoard];\n        boardCopy[idx] = isMaximizing ? 'O' : 'X';\n        const result = minimax(boardCopy, !isMaximizing);\n        scores.push({ score: result.score, index: idx });\n      }\n    });\n\n    console.log(\"scores\",scores)\n\n    if (isMaximizing) {\n      return scores.reduce((best, move) => move.score > best.score ? move : best);\n    } else {\n      return scores.reduce((best, move) => move.score < best.score ? move : best);\n    }\n  };\n\n  const makeComputerMove = () => {\n    const bestMove = minimax(board, true);\n    if (bestMove.index !== undefined) {\n      const newBoard = [...board];\n      newBoard[bestMove.index] = 'O';\n      setTimeout(() => {\n        setBoard(newBoard);\n        setIsXTurn(true);\n      }, 300);\n    }\n  };\n\n  useEffect(() => {\n    const result = checkWinner(board);\n    if (result) {\n      setWinner(result);\n      setGameOver(true);\n    } else if (!isXTurn) {\n      makeComputerMove();\n    }\n  }, [board, isXTurn]);\n\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXTurn(true);\n    setGameOver(false);\n    setWinner(null);\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Tic Tac Toe - Hard Mode</h1>\n      <Board squares={board} onClick={handleClick} />\n      {winner && <h2>{winner === 'Draw' ? 'It\\'s a draw!' : `Winner: ${winner}`}</h2>}\n      {gameOver && <button onClick={resetGame}>Restart</button>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}