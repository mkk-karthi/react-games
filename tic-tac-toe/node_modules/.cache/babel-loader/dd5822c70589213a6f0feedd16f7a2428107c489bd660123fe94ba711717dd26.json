{"ast":null,"code":"var _jsxFileName = \"/var/www/html/node/react-games/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  value,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: onClick,\n  style: {\n    width: \"60px\",\n    height: \"60px\",\n    fontSize: \"24px\",\n    margin: \"4px\"\n  },\n  children: value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Square;\nconst Board = ({\n  squares,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: squares.slice(0, 3).map((val, idx) => /*#__PURE__*/_jsxDEV(Square, {\n      value: val,\n      onClick: () => onClick(idx)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: squares.slice(3, 6).map((val, idx) => /*#__PURE__*/_jsxDEV(Square, {\n      value: val,\n      onClick: () => onClick(idx + 3)\n    }, idx + 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: squares.slice(6, 9).map((val, idx) => /*#__PURE__*/_jsxDEV(Square, {\n      value: val,\n      onClick: () => onClick(idx + 6)\n    }, idx + 6, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n_c2 = Board;\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const checkWinner = board => {\n    for (let [a, b, c] of lines) {\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    if (board.every(cell => cell)) return \"Draw\";\n    return null;\n  };\n  const handleClick = index => {\n    if (board[index] || gameOver || !isXTurn) return;\n    const newBoard = [...board];\n    newBoard[index] = \"X\";\n    setBoard(newBoard);\n    setIsXTurn(false);\n  };\n  const makeComputerMove = () => {\n    if (gameOver) return;\n    const emptyIndices = board.map((val, idx) => val === null ? idx : null).filter(idx => idx !== null);\n\n    // Step 1: Try to win\n    for (let idx of emptyIndices) {\n      const testBoard = [...board];\n      testBoard[idx] = \"O\";\n      console.log(\"testBoard\", JSON.stringify(testBoard));\n      if (checkWinner(testBoard) === \"O\") {\n        makeMove(idx);\n        return;\n      }\n    }\n    console.log(\"board\", JSON.stringify(board));\n\n    // Step 2: Block player win\n    for (let idx of emptyIndices) {\n      const testBoard = [...board];\n      testBoard[idx] = \"X\";\n      console.log(\"board\", JSON.stringify(board));\n      if (checkWinner(testBoard) === \"X\") {\n        makeMove(idx);\n        return;\n      }\n    }\n\n    // Step 3: Take center\n    if (board[4] === null) {\n      makeMove(4);\n      return;\n    }\n\n    // Step 4: Take a corner\n    const corners = [0, 2, 6, 8];\n    const availableCorners = corners.filter(i => board[i] === null);\n    if (availableCorners.length > 0) {\n      makeMove(availableCorners[0]);\n      return;\n    }\n\n    // Step 5: Take a side\n    const sides = [1, 3, 5, 7];\n    const availableSides = sides.filter(i => board[i] === null);\n    if (availableSides.length > 0) {\n      makeMove(availableSides[0]);\n      return;\n    }\n  };\n\n  // Utility to apply the move and switch turn\n  const makeMove = index => {\n    const newBoard = [...board];\n    newBoard[index] = \"O\";\n    setTimeout(() => {\n      setBoard(newBoard);\n      setIsXTurn(true);\n    }, 300);\n  };\n  useEffect(() => {\n    const result = checkWinner(board);\n    if (result) {\n      setWinner(result);\n      setGameOver(true);\n    } else if (!isXTurn) {\n      makeComputerMove();\n    }\n  }, [board, isXTurn]);\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXTurn(true);\n    setGameOver(false);\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe - Hard Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: winner === \"Draw\" ? \"It's a draw!\" : `Winner: ${winner}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Y2t0W6pJeqD7CcYQSm2bQSxc8CI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Square","value","onClick","style","width","height","fontSize","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","squares","slice","map","val","idx","_c2","App","_s","board","setBoard","Array","fill","isXTurn","setIsXTurn","gameOver","setGameOver","winner","setWinner","lines","checkWinner","a","b","c","every","cell","handleClick","index","newBoard","makeComputerMove","emptyIndices","filter","testBoard","console","log","JSON","stringify","makeMove","corners","availableCorners","i","length","sides","availableSides","setTimeout","result","resetGame","textAlign","_c3","$RefreshReg$"],"sources":["/var/www/html/node/react-games/tic-tac-toe/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Square = ({ value, onClick }) => (\n  <button\n    onClick={onClick}\n    style={{\n      width: \"60px\",\n      height: \"60px\",\n      fontSize: \"24px\",\n      margin: \"4px\",\n    }}\n  >\n    {value}\n  </button>\n);\n\nconst Board = ({ squares, onClick }) => (\n  <div>\n    <div>\n      {squares.slice(0, 3).map((val, idx) => (\n        <Square key={idx} value={val} onClick={() => onClick(idx)} />\n      ))}\n    </div>\n    <div>\n      {squares.slice(3, 6).map((val, idx) => (\n        <Square key={idx + 3} value={val} onClick={() => onClick(idx + 3)} />\n      ))}\n    </div>\n    <div>\n      {squares.slice(6, 9).map((val, idx) => (\n        <Square key={idx + 6} value={val} onClick={() => onClick(idx + 6)} />\n      ))}\n    </div>\n  </div>\n);\n\nconst App = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  const checkWinner = (board) => {\n    for (let [a, b, c] of lines) {\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    if (board.every((cell) => cell)) return \"Draw\";\n    return null;\n  };\n\n  const handleClick = (index) => {\n    if (board[index] || gameOver || !isXTurn) return;\n    const newBoard = [...board];\n    newBoard[index] = \"X\";\n    setBoard(newBoard);\n    setIsXTurn(false);\n  };\n\n  const makeComputerMove = () => {\n    if (gameOver) return;\n\n    const emptyIndices = board\n      .map((val, idx) => (val === null ? idx : null))\n      .filter((idx) => idx !== null);\n\n    // Step 1: Try to win\n    for (let idx of emptyIndices) {\n      const testBoard = [...board];\n      testBoard[idx] = \"O\";\n      console.log(\"testBoard\", JSON.stringify(testBoard));\n      if (checkWinner(testBoard) === \"O\") {\n        makeMove(idx);\n        return;\n      }\n    }\n    console.log(\"board\", JSON.stringify(board));\n\n    // Step 2: Block player win\n    for (let idx of emptyIndices) {\n      const testBoard = [...board];\n      testBoard[idx] = \"X\";\n      console.log(\"board\", JSON.stringify(board));\n      if (checkWinner(testBoard) === \"X\") {\n        makeMove(idx);\n        return;\n      }\n    }\n\n    // Step 3: Take center\n    if (board[4] === null) {\n      makeMove(4);\n      return;\n    }\n\n    // Step 4: Take a corner\n    const corners = [0, 2, 6, 8];\n    const availableCorners = corners.filter((i) => board[i] === null);\n    if (availableCorners.length > 0) {\n      makeMove(availableCorners[0]);\n      return;\n    }\n\n    // Step 5: Take a side\n    const sides = [1, 3, 5, 7];\n    const availableSides = sides.filter((i) => board[i] === null);\n    if (availableSides.length > 0) {\n      makeMove(availableSides[0]);\n      return;\n    }\n  };\n\n  // Utility to apply the move and switch turn\n  const makeMove = (index) => {\n    const newBoard = [...board];\n    newBoard[index] = \"O\";\n    setTimeout(() => {\n      setBoard(newBoard);\n      setIsXTurn(true);\n    }, 300);\n  };\n\n  useEffect(() => {\n    const result = checkWinner(board);\n    if (result) {\n      setWinner(result);\n      setGameOver(true);\n    } else if (!isXTurn) {\n      makeComputerMove();\n    }\n  }, [board, isXTurn]);\n\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXTurn(true);\n    setGameOver(false);\n    setWinner(null);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Tic Tac Toe - Hard Mode</h1>\n      <Board squares={board} onClick={handleClick} />\n      {winner && (\n        <h2>{winner === \"Draw\" ? \"It's a draw!\" : `Winner: ${winner}`}</h2>\n      )}\n      {gameOver && <button onClick={resetGame}>Restart</button>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}